{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,MAAMC,EAAO,CACTC,gBAAiBC,SAASC,cAAc,kBACxCC,eAAgBF,SAASC,cAAc,iBACvCE,YAAaH,SAASC,cAAc,mBACpCG,iBAAkBJ,SAASC,cAAc,SAG5BH,EAAKM,iBAAiBC,iBAAiB,UAExD,SAAoBC,GAChBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOX,EAAKC,gBAAgBW,OACzCC,EAAYF,OAAOX,EAAKI,eAAeQ,OACvCE,EAASH,OAAOX,EAAKK,YAAYO,OAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAC9BC,EAAcD,EAAGL,GACjBA,GAAcG,C,IAItB,SAASG,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACtCC,YAAW,KACHN,EACAO,EAAA5B,GAAS6B,OAAOC,QAAQL,EAAQ,qBAAqBN,QAAeC,QAEpEQ,EAAA5B,GAAS6B,OAAOE,QAAQL,EAAO,oBAAoBP,QAAeC,OAAW,GAGlFA,EAAM,IAIRY,MAAKlB,IACFmB,QAAQC,IAAIpB,EAAM,IAErBqB,OAAMC,IACHH,QAAQC,IAAIE,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["\"use strict\";\n\nimport Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst refs = {\n    inputFirstDelay: document.querySelector('[name=\"delay\"]'),\n    inputDelayStep: document.querySelector('[name=\"step\"]'),\n    inputAmount: document.querySelector('[name=\"amount\"]'),\n    btnCreatePromise: document.querySelector('form'),\n};\n\nconst btnClick = refs.btnCreatePromise.addEventListener('submit', onBtnClick);\n\nfunction onBtnClick(event) {\n    event.preventDefault();\n    let firstDelay = Number(refs.inputFirstDelay.value);\n    let delayStep = Number(refs.inputDelayStep.value);\n    let amount = Number(refs.inputAmount.value);\n\n    for (let i = 1; i <= amount; i += 1) {\n        createPromise(i, firstDelay);\n        firstDelay += delayStep;\n    }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        if (shouldResolve) {\n            Notiflix.Notify.success(resolve(`Fulfilled promise ${position} in ${delay}ms`));\n        } else {\n            Notiflix.Notify.failure(reject(`Rejected promise ${position} in ${delay}ms`));\n        \n        }\n    }, delay);\n    });\n\n    promise\n    .then(value => {\n        console.log(value);\n    })\n    .catch(error => {\n        console.log(error);\n    });\n} \n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","inputFirstDelay","document","querySelector","inputDelayStep","inputAmount","btnCreatePromise","addEventListener","event","preventDefault","firstDelay","Number","value","delayStep","amount","i","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","success","failure","then","console","log","catch","error"],"version":3,"file":"03-promises.531109be.js.map"}